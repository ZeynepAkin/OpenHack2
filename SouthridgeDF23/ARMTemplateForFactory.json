{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SouthridgeDF23"
		},
		"CloudSales_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CloudSales'"
		},
		"CloudStreaming_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CloudStreaming'"
		},
		"DataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DataLake'"
		},
		"FourthCoffeeFileServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FourthCoffeeFileServer'"
		},
		"MovieCosmosDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MovieCosmosDb'"
		},
		"VanArselSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'VanArselSql'"
		},
		"DataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://southridgedatalake.dfs.core.windows.net"
		},
		"FourthCoffeeFileServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\10.0.0.4\\c$\\Rentals"
		},
		"FourthCoffeeFileServer_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "openhackadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CloudSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SalesOrder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OrderID",
											"type": "Guid"
										},
										"sink": {
											"name": "OrderID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "Guid"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TotalCost",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalCost",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UpdatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CloudSalesOrder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudSalesOrder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OrderDetail",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SalesOrder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudSalesOrderDetail",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudSalesOrderDetail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Customers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OrderDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudSalesCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudSalesCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CloudSalesAdresses",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudSalesAdresses",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudSalesAdresses",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CloudSalesOrder')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesOrder')]",
				"[concat(variables('factoryId'), '/datasets/CloudSalesOrderDetail')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesOrderDetail')]",
				"[concat(variables('factoryId'), '/datasets/CloudSalesCustomers')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesCustomers')]",
				"[concat(variables('factoryId'), '/datasets/CloudSalesAdresses')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesAdresses')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudStreaming')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Addresses",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AddressID",
											"type": "Guid"
										},
										"sink": {
											"name": "AddressID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "Guid"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String"
										},
										"sink": {
											"name": "State",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ZipCode",
											"type": "String"
										},
										"sink": {
											"name": "ZipCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UpdatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CloudStreamingAddresses",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudStreamingAddresses",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudStreamingCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudStreamingCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transactions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudStreamingTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCloudStreamingTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CloudStreamingAddresses')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudStreamingAddresses')]",
				"[concat(variables('factoryId'), '/datasets/CloudStreamingCustomers')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudStreamingCustomers')]",
				"[concat(variables('factoryId'), '/datasets/CloudStreamingTransactions')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudStreamingTransactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dimcustomer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesSouthridgeCustomer": {},
									"SalesSouthridgeAdresses": {},
									"StreamingSouthridgeCustomer": {},
									"StreamingSouthridgeAdresses": {},
									"FourthCoffeeCustomer": {},
									"VanArselCustomer": {},
									"TargetDimCustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "OrderTransactionFact",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "OrderTransactionFact",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Order": {},
									"OrderDetail": {},
									"TargetOrderTransaction": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/dataflows/OrderTransactionFact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Actors",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActorID",
											"type": "String"
										},
										"sink": {
											"name": "ActorID"
										}
									},
									{
										"source": {
											"name": "ActorName",
											"type": "String"
										},
										"sink": {
											"name": "ActorName"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"name": "Gender"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "FourthCoffeeActors",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetFourthCoffeeActors",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FourthCoffeeCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetFourthCoffeeCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MovieActors",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FourthCoffeeMovieActors",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetFourthCoffeeMovieActors",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Movies",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MovieID",
											"type": "String"
										},
										"sink": {
											"name": "ActorID"
										}
									},
									{
										"source": {
											"name": "MovieTitle",
											"type": "String"
										},
										"sink": {
											"name": "ActorName"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Gender"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "FourthCoffeeMovies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetFourthCaffeeMovies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OnlineMovieMappings",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FourthCoffeeOnlineMovieMappings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetFourthCoffeeOnlineMovieMappings",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FourthCoffeeTransactions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TransactionID",
											"type": "String"
										},
										"sink": {
											"name": "ActorID"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String"
										},
										"sink": {
											"name": "ActorName"
										}
									},
									{
										"source": {
											"name": "MovieID",
											"type": "String"
										},
										"sink": {
											"name": "Gender"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "FourthCoffeeTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetFourthCoffeeTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeActors')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCoffeeActors')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeCustomers')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCoffeeCustomers')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeMovieActors')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCoffeeMovieActors')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeMovies')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCaffeeMovies')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeOnlineMovieMappings')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCoffeeOnlineMovieMappings')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeTransactions')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCoffeeTransactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanArsel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_2y7",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_2y7",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "datafiles1/VanArsdel/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_2y7",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_2y7",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Actors"
								},
								"destination": {
									"fileName": "dboActors.csv"
								}
							},
							{
								"source": {
									"table": "Customers"
								},
								"destination": {
									"fileName": "dboCustomers.csv"
								}
							},
							{
								"source": {
									"table": "MovieActors"
								},
								"destination": {
									"fileName": "dboMovieActors.csv"
								}
							},
							{
								"source": {
									"table": "Movies"
								},
								"destination": {
									"fileName": "dboMovies.csv"
								}
							},
							{
								"source": {
									"table": "OnlineMovieMappings"
								},
								"destination": {
									"fileName": "dboOnlineMovieMappings.csv"
								}
							},
							{
								"source": {
									"table": "Transactions"
								},
								"destination": {
									"fileName": "dboTransactions.csv"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_2y7')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_2y7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cosmosmovies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['actors']"
										},
										"sink": {
											"path": "$['actors']"
										}
									},
									{
										"source": {
											"path": "$['availabilityDate']"
										},
										"sink": {
											"path": "$['availabilityDate']"
										}
									},
									{
										"source": {
											"path": "$['genre']"
										},
										"sink": {
											"path": "$['genre']"
										}
									},
									{
										"source": {
											"path": "$['rating']"
										},
										"sink": {
											"path": "$['rating']"
										}
									},
									{
										"source": {
											"path": "$['releaseYear']"
										},
										"sink": {
											"path": "$['releaseYear']"
										}
									},
									{
										"source": {
											"path": "$['runtime']"
										},
										"sink": {
											"path": "$['runtime']"
										}
									},
									{
										"source": {
											"path": "$['streamingAvailabilityDate']"
										},
										"sink": {
											"path": "$['streamingAvailabilityDate']"
										}
									},
									{
										"source": {
											"path": "$['tier']"
										},
										"sink": {
											"path": "$['tier']"
										}
									},
									{
										"source": {
											"path": "$['title']"
										},
										"sink": {
											"path": "$['title']"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"path": "$['id']"
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"path": "$['_rid']"
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"path": "$['_self']"
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"path": "$['_etag']"
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"path": "$['_attachments']"
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"path": "$['_ts']"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosDbSqlMovies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCosmosMovies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlMovies')]",
				"[concat(variables('factoryId'), '/datasets/TargetCosmosMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSalesAdresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudSales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Addresses"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSalesCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudSales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSalesOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudSales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerID",
						"type": "uniqueidentifier"
					},
					{
						"name": "OrderDate",
						"type": "date"
					},
					{
						"name": "ShipDate",
						"type": "date"
					},
					{
						"name": "TotalCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CreatedDate",
						"type": "date"
					},
					{
						"name": "UpdatedDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSalesOrderDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudSales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderDetailID",
						"type": "uniqueidentifier"
					},
					{
						"name": "OrderID",
						"type": "uniqueidentifier"
					},
					{
						"name": "MovieID",
						"type": "uniqueidentifier"
					},
					{
						"name": "Quantity",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UnitCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CreatedDate",
						"type": "date"
					},
					{
						"name": "UpdatedDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrderDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudStreamingAddresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudStreaming",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerID",
						"type": "uniqueidentifier"
					},
					{
						"name": "AddressLine1",
						"type": "varchar"
					},
					{
						"name": "AddressLine2",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "char"
					},
					{
						"name": "ZipCode",
						"type": "char"
					},
					{
						"name": "CreatedDate",
						"type": "date"
					},
					{
						"name": "UpdatedDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Addresses"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudStreaming')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudStreamingCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudStreaming",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerID",
						"type": "uniqueidentifier"
					},
					{
						"name": "AddressLine1",
						"type": "varchar"
					},
					{
						"name": "AddressLine2",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "char"
					},
					{
						"name": "ZipCode",
						"type": "char"
					},
					{
						"name": "CreatedDate",
						"type": "date"
					},
					{
						"name": "UpdatedDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudStreaming')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudStreamingTransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudStreaming",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerID",
						"type": "uniqueidentifier"
					},
					{
						"name": "AddressLine1",
						"type": "varchar"
					},
					{
						"name": "AddressLine2",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "char"
					},
					{
						"name": "ZipCode",
						"type": "char"
					},
					{
						"name": "CreatedDate",
						"type": "date"
					},
					{
						"name": "UpdatedDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudStreaming')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MovieCosmosDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"actors": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									}
								}
							}
						},
						"availabilityDate": {
							"type": "string"
						},
						"genre": {
							"type": "string"
						},
						"rating": {
							"type": "string"
						},
						"releaseYear": {
							"type": "integer"
						},
						"runtime": {
							"type": "integer"
						},
						"streamingAvailabilityDate": {
							"type": "string"
						},
						"tier": {
							"type": "integer"
						},
						"title": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MovieCosmosDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_2y7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "VanArsdel",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "DWH",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactOrderTransaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "DWH",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeActors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "Actors.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeFileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "Customers.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeFileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeMovieActors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "MovieActors.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeFileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "Movies.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeFileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeOnlineMovieMappings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "OnlineMovieMappings.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeFileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeTransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "Transactions.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeFileServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order.csv",
						"folderPath": "CloudSales",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2y7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VanArselSql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VanArselSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudSalesAdresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Adresses.csv",
						"folderPath": "CloudSales",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudSalesCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customers.csv",
						"folderPath": "CloudSales",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudSalesOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order.csv",
						"folderPath": "CloudSales",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					},
					{
						"name": "TotalCost",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudSalesOrderDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrderDetail.csv",
						"folderPath": "CloudSales",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderDetailID",
						"type": "String"
					},
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "MovieID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "UnitCost",
						"type": "String"
					},
					{
						"name": "LineNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudStreamingAddresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Addresses.csv",
						"folderPath": "CloudStreaming",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudStreamingCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customers.csv",
						"folderPath": "CloudStreaming",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCloudStreamingTransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions.csv",
						"folderPath": "CloudStreaming",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetCosmosMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "moviedata",
						"folderPath": "CosmosMovies",
						"fileSystem": "datafiles1"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetFourthCaffeeMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Movies.csv",
						"folderPath": "FourthCoffee",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetFourthCoffeeActors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Actors.csv",
						"folderPath": "FourthCoffee",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetFourthCoffeeCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customers.csv",
						"folderPath": "FourthCoffee",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetFourthCoffeeMovieActors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MovieActors.csv",
						"folderPath": "FourthCoffee",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetFourthCoffeeOnlineMovieMappings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OnlineMovieMappings.csv",
						"folderPath": "FourthCoffee",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetFourthCoffeeTransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions.csv",
						"folderPath": "FourthCoffee",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanArsdelCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dboCustomers.csv",
						"folderPath": "VanArsdel",
						"fileSystem": "datafiles1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSales')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('CloudSales_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudStreaming')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('CloudStreaming_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeFileServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FourthCoffeeFileServer_properties_typeProperties_host')]",
					"userId": "[parameters('FourthCoffeeFileServer_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FourthCoffeeFileServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SouttrighIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SouttrighIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieCosmosDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('MovieCosmosDb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanArselSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('VanArselSql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SouthRightIRVanArsdel",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SouthRightIRVanArsdel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SouthRightIRVanArsdel')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SouttrighIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrderTransactionFact')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TargetCloudSalesOrder",
								"type": "DatasetReference"
							},
							"name": "Order",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "TargetCloudSalesOrderDetail",
								"type": "DatasetReference"
							},
							"name": "OrderDetail",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactOrderTransaction",
								"type": "DatasetReference"
							},
							"name": "TargetOrderTransaction"
						}
					],
					"transformations": [
						{
							"name": "OrderJoin"
						},
						{
							"name": "SRDC"
						},
						{
							"name": "JoinSelect"
						}
					],
					"script": "\n\nsource(output(\n\t\tOrderID as string,\n\t\tCustomerID as string,\n\t\tOrderDate as string,\n\t\tShipDate as string,\n\t\tTotalCost as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Order\nsource(output(\n\t\tOrderDetailID as string,\n\t\tOrderID as string,\n\t\tMovieID as string,\n\t\tQuantity as string,\n\t\tUnitCost as string,\n\t\tLineNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> OrderDetail\nOrder, OrderDetail join(Order@OrderID == OrderDetail@OrderID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> OrderJoin\nJoinSelect derive(SourceSystemID = 1,\n\t\tGlobelOrderID = uuid()) ~> SRDC\nOrderJoin select(mapColumn(\n\t\tOrderID = Order@OrderID,\n\t\tCustomerID,\n\t\tOrderDate,\n\t\tShipDate,\n\t\tTotalCost,\n\t\tCreatedDate = Order@CreatedDate,\n\t\tOrderDetailID,\n\t\tMovieID,\n\t\tQuantity,\n\t\tUnitCost,\n\t\tLineNumber,\n\t\tUpdatedDate = Order@UpdatedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> JoinSelect\nSRDC sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Factordertransaction.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true) ~> TargetOrderTransaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesOrder')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesOrderDetail')]",
				"[concat(variables('factoryId'), '/datasets/FactOrderTransaction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TargetCloudSalesCustomers",
								"type": "DatasetReference"
							},
							"name": "SalesSouthridgeCustomer",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "TargetCloudSalesAdresses",
								"type": "DatasetReference"
							},
							"name": "SalesSouthridgeAdresses",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "TargetCloudStreamingCustomers",
								"type": "DatasetReference"
							},
							"name": "StreamingSouthridgeCustomer",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "TargetCloudStreamingAddresses",
								"type": "DatasetReference"
							},
							"name": "StreamingSouthridgeAdresses",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "TargetFourthCoffeeCustomers",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeCustomer",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "VanArsdelCustomer",
								"type": "DatasetReference"
							},
							"name": "VanArselCustomer",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimCustomer",
								"type": "DatasetReference"
							},
							"name": "TargetDimCustomer"
						}
					],
					"transformations": [
						{
							"name": "SalesCustomerAdressJoin"
						},
						{
							"name": "StreamingCustomerAdressesJoin"
						},
						{
							"name": "Union1"
						},
						{
							"name": "SelectSalesColumn"
						},
						{
							"name": "SelectStreamingColumn"
						},
						{
							"name": "Union"
						},
						{
							"name": "Union2"
						},
						{
							"name": "SSID4"
						},
						{
							"name": "SSID"
						},
						{
							"name": "SSID2"
						},
						{
							"name": "SSID3"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "\n\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tlimit: 100) ~> SalesSouthridgeCustomer\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> SalesSouthridgeAdresses\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> StreamingSouthridgeCustomer\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> StreamingSouthridgeAdresses\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> FourthCoffeeCustomer\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> VanArselCustomer\nSalesSouthridgeCustomer, SalesSouthridgeAdresses join(SalesSouthridgeCustomer@CustomerID == SalesSouthridgeAdresses@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> SalesCustomerAdressJoin\nStreamingSouthridgeCustomer, StreamingSouthridgeAdresses join(StreamingSouthridgeCustomer@CustomerID == StreamingSouthridgeAdresses@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> StreamingCustomerAdressesJoin\nSSID2, SSID3 union(byName: true)~> Union1\nSalesCustomerAdressJoin select(mapColumn(\n\t\tCustomerID = SalesSouthridgeCustomer@CustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tCreatedDate = SalesSouthridgeCustomer@CreatedDate,\n\t\tUpdatedDate = SalesSouthridgeCustomer@UpdatedDate,\n\t\tAddressID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSalesColumn\nSSID select(mapColumn(\n\t\tCustomerID = StreamingSouthridgeCustomer@CustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tCreatedDate = StreamingSouthridgeCustomer@CreatedDate,\n\t\tUpdatedDate = StreamingSouthridgeCustomer@UpdatedDate,\n\t\tAddressID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStreamingColumn\nSSID4, SelectStreamingColumn union(byName: true)~> Union\nUnion, Union1 union(byName: true)~> Union2\nSelectSalesColumn derive(SourceSystemID = 1) ~> SSID4\nStreamingCustomerAdressesJoin derive(SourceSystemID = 1) ~> SSID\nFourthCoffeeCustomer derive(SourceSystemID = 2) ~> SSID2\nVanArselCustomer derive(SourceSystemID = 3) ~> SSID3\nUnion2 derive(GlobalCustomerID = uuid()) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DimCustomer.csv'],\n\tpartitionBy('hash', 1)) ~> TargetDimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesCustomers')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudSalesAdresses')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudStreamingCustomers')]",
				"[concat(variables('factoryId'), '/datasets/TargetCloudStreamingAddresses')]",
				"[concat(variables('factoryId'), '/datasets/TargetFourthCoffeeCustomers')]",
				"[concat(variables('factoryId'), '/datasets/VanArsdelCustomer')]",
				"[concat(variables('factoryId'), '/datasets/DimCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesSouthridgeCustomer": {},
									"SalesSouthridgeAdresses": {},
									"StreamingSouthridgeCustomer": {},
									"StreamingSouthridgeAdresses": {},
									"FourthCoffeeCustomer": {},
									"VanArselCustomer": {},
									"TargetDimCustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}